/*
 * This file is generated by jOOQ.
 */
package pl.bartekbak.lawyer.generate.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import pl.bartekbak.lawyer.generate.jooq.tables.Court;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourtRecord extends UpdatableRecordImpl<CourtRecord> implements Record5<Integer, String, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.court.court_id</code>.
     */
    public void setCourtId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.court.court_id</code>.
     */
    public Integer getCourtId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.court.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.court.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.court.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.court.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.court.address</code>.
     */
    public void setAddress(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.court.address</code>.
     */
    public Integer getAddress() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.court.phone</code>.
     */
    public void setPhone(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.court.phone</code>.
     */
    public String getPhone() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Court.COURT.COURT_ID;
    }

    @Override
    public Field<String> field2() {
        return Court.COURT.NAME;
    }

    @Override
    public Field<String> field3() {
        return Court.COURT.DESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return Court.COURT.ADDRESS;
    }

    @Override
    public Field<String> field5() {
        return Court.COURT.PHONE;
    }

    @Override
    public Integer component1() {
        return getCourtId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Integer component4() {
        return getAddress();
    }

    @Override
    public String component5() {
        return getPhone();
    }

    @Override
    public Integer value1() {
        return getCourtId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Integer value4() {
        return getAddress();
    }

    @Override
    public String value5() {
        return getPhone();
    }

    @Override
    public CourtRecord value1(Integer value) {
        setCourtId(value);
        return this;
    }

    @Override
    public CourtRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CourtRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public CourtRecord value4(Integer value) {
        setAddress(value);
        return this;
    }

    @Override
    public CourtRecord value5(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public CourtRecord values(Integer value1, String value2, String value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CourtRecord
     */
    public CourtRecord() {
        super(Court.COURT);
    }

    /**
     * Create a detached, initialised CourtRecord
     */
    public CourtRecord(Integer courtId, String name, String description, Integer address, String phone) {
        super(Court.COURT);

        setCourtId(courtId);
        setName(name);
        setDescription(description);
        setAddress(address);
        setPhone(phone);
    }
}
