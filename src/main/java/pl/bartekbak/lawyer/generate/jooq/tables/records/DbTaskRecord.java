/*
 * This file is generated by jOOQ.
 */
package pl.bartekbak.lawyer.generate.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import pl.bartekbak.lawyer.generate.jooq.tables.DbTask;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbTaskRecord extends UpdatableRecordImpl<DbTaskRecord> implements Record4<Integer, Boolean, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.db_task.task_id</code>.
     */
    public void setTaskId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.db_task.task_id</code>.
     */
    public Integer getTaskId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.db_task.priority</code>.
     */
    public void setPriority(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.db_task.priority</code>.
     */
    public Boolean getPriority() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.db_task.deadline</code>.
     */
    public void setDeadline(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.db_task.deadline</code>.
     */
    public LocalDateTime getDeadline() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.db_task.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.db_task.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Boolean, LocalDateTime, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Boolean, LocalDateTime, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return DbTask.DB_TASK.TASK_ID;
    }

    @Override
    public Field<Boolean> field2() {
        return DbTask.DB_TASK.PRIORITY;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return DbTask.DB_TASK.DEADLINE;
    }

    @Override
    public Field<String> field4() {
        return DbTask.DB_TASK.DESCRIPTION;
    }

    @Override
    public Integer component1() {
        return getTaskId();
    }

    @Override
    public Boolean component2() {
        return getPriority();
    }

    @Override
    public LocalDateTime component3() {
        return getDeadline();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Integer value1() {
        return getTaskId();
    }

    @Override
    public Boolean value2() {
        return getPriority();
    }

    @Override
    public LocalDateTime value3() {
        return getDeadline();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public DbTaskRecord value1(Integer value) {
        setTaskId(value);
        return this;
    }

    @Override
    public DbTaskRecord value2(Boolean value) {
        setPriority(value);
        return this;
    }

    @Override
    public DbTaskRecord value3(LocalDateTime value) {
        setDeadline(value);
        return this;
    }

    @Override
    public DbTaskRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public DbTaskRecord values(Integer value1, Boolean value2, LocalDateTime value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbTaskRecord
     */
    public DbTaskRecord() {
        super(DbTask.DB_TASK);
    }

    /**
     * Create a detached, initialised DbTaskRecord
     */
    public DbTaskRecord(Integer taskId, Boolean priority, LocalDateTime deadline, String description) {
        super(DbTask.DB_TASK);

        setTaskId(taskId);
        setPriority(priority);
        setDeadline(deadline);
        setDescription(description);
    }
}
